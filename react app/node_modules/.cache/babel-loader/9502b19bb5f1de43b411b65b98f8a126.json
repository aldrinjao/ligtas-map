{"ast":null,"code":"var _jsxFileName = \"/home/aldrin/Desktop/proj/ligtas-map/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { Circle, MapContainer, Popup, TileLayer } from \"react-leaflet\";\nimport Paper from \"@mui/material/Paper\";\nimport React from \"react\";\nimport Slide from \"@mui/material/Slide\";\nimport { useEffect } from \"react\";\nimport { usePapaParse } from \"react-papaparse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const containerRef = React.useRef(null);\n  const bufferRadius = 20000;\n  const fillOpacity = 0.5;\n  const strokeOpacity = 0;\n  const mapCenter = [13, 120];\n  const zoom = 7;\n  const maxZoom = 10;\n  const minZoom = 6;\n  let initialLoad = true;\n  const {\n    readRemoteFile\n  } = usePapaParse();\n  const [stations, setStations] = React.useState([]);\n  const [checked, setChecked] = React.useState(false);\n  const url = \"https://docs.google.com/spreadsheets/d/e/2PACX-1vQcuVE7J9YLh5q8cy0QlFVJCKQ1VTxwywwVmtKA52vWIf-I62jCL0NrFnyEHGdLbPqXrqN7Y8rUtCT-/pub?output=csv\";\n  useEffect(() => {\n    readRemoteFile(url, {\n      complete: results => {\n        console.log(initialLoad);\n        results.data.shift();\n        setStations(results.data);\n      },\n      download: true\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: mapCenter,\n      minZoom: minZoom,\n      zoom: zoom,\n      maxZoom: maxZoom,\n      children: [/*#__PURE__*/_jsxDEV(Slide, {\n        direction: \"up\",\n        in: checked,\n        container: containerRef.current,\n        style: {\n          zIndex: 99999\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            width: \"50px\",\n            height: \"50px\"\n          },\n          elevation: 3,\n          children: \"aaaa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), stations.map((value, index) => {\n        let center = [parseFloat(value[3]), parseFloat(value[4])];\n        let stationName = value[0];\n        let date = value[1];\n        let status = value[2];\n        let elevation = value[5];\n        let currentRain = parseFloat(value[14]);\n        let town = value[7];\n        let municipality = value[8];\n        let province = value[9];\n        return /*#__PURE__*/_jsxDEV(Circle, {\n          center: center,\n          pathOptions: getColor(currentRain),\n          radius: bufferRadius,\n          opacity: strokeOpacity,\n          fillOpacity: fillOpacity,\n          eventHandlers: {\n            click: e => {\n              highlightFeature(e);\n            },\n            mouseout: e => {\n              removehighlightFeature(e, currentRain);\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontWeight: 600,\n                fontSize: \"1.1rem\"\n              },\n              children: stationName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), \"Reading Date: \", date, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), \"Status: \", status, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), \"Elevation: \", elevation, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), \"Current Rainfall: \", currentRain, \"mm\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), \"Location: \", town, \", \", municipality, \", \", province]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n\n  function highlightFeature(event) {\n    setChecked(prev => !prev);\n    let layer = event.sourceTarget;\n    layer.setStyle({\n      color: \"yellow\",\n      opacity: 1\n    });\n  }\n\n  function removehighlightFeature(event, rain) {\n    setChecked(prev => !prev);\n    console.log(event);\n    let layer = event.sourceTarget;\n    layer.setStyle(getColor(rain));\n  }\n\n  function getColor(rain) {\n    var colors = [\"#38B75F\", \"#FCFD31\", \"#FFBD59\", \"#FE0100\", \"#313D39\"];\n    const threshold = [0.1, 0.2, 0.3, 0.4];\n    let index = 4;\n\n    if (rain <= threshold[0]) {\n      index = 0;\n    } else if (rain > threshold[0] && rain <= threshold[1]) {\n      index = 1;\n    } else if (rain > threshold[1] && rain <= threshold[2]) {\n      index = 2;\n    } else if (rain > threshold[2] && rain <= threshold[3]) {\n      index = 3;\n    }\n\n    return {\n      fillColor: colors[index],\n      color: colors[index],\n      opacity: 0\n    };\n  }\n}\n\n_s(App, \"Mu5zeBSaAjOOqHBTmXOPvJnjDF8=\", false, function () {\n  return [usePapaParse];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Circle","MapContainer","Popup","TileLayer","Paper","React","Slide","useEffect","usePapaParse","App","containerRef","useRef","bufferRadius","fillOpacity","strokeOpacity","mapCenter","zoom","maxZoom","minZoom","initialLoad","readRemoteFile","stations","setStations","useState","checked","setChecked","url","complete","results","console","log","data","shift","download","current","zIndex","width","height","map","value","index","center","parseFloat","stationName","date","status","elevation","currentRain","town","municipality","province","getColor","click","e","highlightFeature","mouseout","removehighlightFeature","fontWeight","fontSize","event","prev","layer","sourceTarget","setStyle","color","opacity","rain","colors","threshold","fillColor"],"sources":["/home/aldrin/Desktop/proj/ligtas-map/src/App.tsx"],"sourcesContent":["import \"./App.css\";\n\nimport { Circle, MapContainer, Popup, TileLayer } from \"react-leaflet\";\n\nimport { LatLngExpression } from \"leaflet\";\nimport Paper from \"@mui/material/Paper\";\nimport React from \"react\";\nimport Slide from \"@mui/material/Slide\";\nimport { useEffect } from \"react\";\nimport { usePapaParse } from \"react-papaparse\";\n\nfunction App() {\n  const containerRef = React.useRef(null);\n  const bufferRadius = 20000;\n  const fillOpacity = 0.5;\n  const strokeOpacity = 0;\n  const mapCenter: LatLngExpression = [13, 120];\n  const zoom = 7;\n  const maxZoom = 10;\n  const minZoom = 6;\n  let initialLoad = true;\n\n  const { readRemoteFile } = usePapaParse();\n  const [stations, setStations] = React.useState<any>([]);\n  const [checked, setChecked] = React.useState(false);\n\n  const url =\n    \"https://docs.google.com/spreadsheets/d/e/2PACX-1vQcuVE7J9YLh5q8cy0QlFVJCKQ1VTxwywwVmtKA52vWIf-I62jCL0NrFnyEHGdLbPqXrqN7Y8rUtCT-/pub?output=csv\";\n\n  useEffect(() => {\n    readRemoteFile(url, {\n      complete: (results) => {\n        console.log(initialLoad);\n        results.data.shift();\n        setStations(results.data);\n      },\n      download: true,\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <MapContainer\n        center={mapCenter}\n        minZoom={minZoom}\n        zoom={zoom}\n        maxZoom={maxZoom}\n      >\n        <Slide\n          direction=\"up\"\n          in={checked}\n          container={containerRef.current}\n          style={{ zIndex: 99999 }}\n        >\n          <Paper sx={{ width: \"50px\", height: \"50px\" }} elevation={3}>\n            aaaa\n          </Paper>\n        </Slide>\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n        />\n\n        {stations.map((value: any, index: any) => {\n          let center: LatLngExpression = [\n            parseFloat(value[3]),\n            parseFloat(value[4]),\n          ];\n          let stationName = value[0];\n          let date = value[1];\n          let status = value[2];\n          let elevation = value[5];\n          let currentRain = parseFloat(value[14]);\n          let town = value[7];\n          let municipality = value[8];\n          let province = value[9];\n\n          return (\n            <Circle\n              key={index}\n              center={center}\n              pathOptions={getColor(currentRain)}\n              radius={bufferRadius}\n              opacity={strokeOpacity}\n              fillOpacity={fillOpacity}\n              eventHandlers={{\n                click: (e) => {\n                  highlightFeature(e);\n                },\n                mouseout: (e) => {\n                  removehighlightFeature(e, currentRain);\n                },\n              }}\n            >\n              <Popup>\n                <span style={{ fontWeight: 600, fontSize: \"1.1rem\" }}>\n                  {stationName}\n                </span>\n                <br></br>\n                Reading Date: {date}\n                <br></br>\n                Status: {status}\n                <br></br>\n                Elevation: {elevation}\n                <br></br>\n                Current Rainfall: {currentRain}mm\n                <br></br>\n                Location: {town}, {municipality}, {province}\n              </Popup>\n            </Circle>\n          );\n        })}\n      </MapContainer>\n    </div>\n  );\n\n  function highlightFeature(event: any) {\n    setChecked((prev) => !prev);\n\n    let layer = event.sourceTarget;\n    layer.setStyle({\n      color: \"yellow\",\n      opacity: 1,\n    });\n  }\n\n  function removehighlightFeature(event: any, rain: any) {\n    setChecked((prev) => !prev);\n    console.log(event);\n    let layer = event.sourceTarget;\n    layer.setStyle(getColor(rain));\n  }\n\n  function getColor(rain: number) {\n    var colors = [\"#38B75F\", \"#FCFD31\", \"#FFBD59\", \"#FE0100\", \"#313D39\"];\n\n    const threshold = [0.1, 0.2, 0.3, 0.4];\n    let index = 4;\n\n    if (rain <= threshold[0]) {\n      index = 0;\n    } else if (rain > threshold[0] && rain <= threshold[1]) {\n      index = 1;\n    } else if (rain > threshold[1] && rain <= threshold[2]) {\n      index = 2;\n    } else if (rain > threshold[2] && rain <= threshold[3]) {\n      index = 3;\n    }\n\n    return { fillColor: colors[index], color: colors[index], opacity: 0 };\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}